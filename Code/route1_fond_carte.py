# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'route1_fond_carte.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import Qt
import random
from interface_combat import lancer_interface_combat
import classPokemon as cP
import time
import Test
from Test import liste_pokemon_joueur 


class Character(QLabel):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setGeometry(100, 100, 50, 50)  # Taille de la fenêtre
        
        # Création de la QLabel pour afficher l'image
        self.label = QLabel(self)
        base_path_RED = os.path.dirname(__file__)
        red_image = os.path.join(base_path_RED, "asset", "SpriteRed.png")
        # Charger l'image avec QPixmap
        pixmap = QPixmap(red_image)
        self.label.setPixmap(pixmap)
        self.label.setAlignment(Qt.AlignCenter)  # Centrer l'image dans la fenêtre

    def keyPressEvent(self, event):
        step = 40  # Taille du pas de déplacement du personnage

        if event.key() == Qt.Key_Left:
            self.move(max(0, self.x() - step), self.y())
            if random.random() < 0.05:
                pokemon_aleatoire = random.choice(list(cP.pokedex.keys()))
                lancer_interface_combat(liste_pokemon_joueur[0], pokemon_aleatoire)
            
        elif event.key() == Qt.Key_Right:
            self.move(min(self.parent().width() - self.width(), self.x() + step), self.y())
            if random.random() < 0.05:
                pokemon_aleatoire = random.choice(list(cP.pokedex.keys()))
                lancer_interface_combat(liste_pokemon_joueur[0], pokemon_aleatoire)
        elif event.key() == Qt.Key_Up:
            self.move(self.x(), max(0, self.y() - step))
            if random.random() < 0.05:
                pokemon_aleatoire = random.choice(list(cP.pokedex.keys()))
                lancer_interface_combat(liste_pokemon_joueur[0], pokemon_aleatoire)
        elif event.key() == Qt.Key_Down:
            self.move(self.x(), min(self.parent().height() - self.height(), self.y() + step))
            if random.random() < 0.05:
                pokemon_aleatoire = random.choice(list(cP.pokedex.keys()))
                lancer_interface_combat(liste_pokemon_joueur[0], pokemon_aleatoire)

class MapGame(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Map Game")
        self.setGeometry(100, 100, 760, 1260)

        self.map_label = QLabel(self)
        self.map_label.setGeometry(0, 0, 760, 1260)  # Définir la taille de la fenêtre comme celle de l'image
        base_path_map = os.path.dirname(__file__)
        map_image = os.path.join(base_path_map, "asset", "map.png")
        self.map_label.setPixmap(QPixmap(map_image))  # Remplacez "map.png" par le chemin de votre image de carte
        
        self.character = Character(self)

        self.setFocusPolicy(Qt.StrongFocus)  # Activer la réception des événements de clavier

    def keyPressEvent(self, event):
        time.sleep(0.15)
        self.character.keyPressEvent(event) # Transmettre les événements de clavier à la classe Character
        
    
    
    
    
    
    








